package _programers;

import java.util.HashSet;

public class testd {

	public static void main(String[] args) {
		
		System.out.println(solution("011"));
	}

	private static int solution(String string) {
		int answer = 0;
		HashSet<Integer> set = new HashSet<>();
		permutation("", string, set);
		for (int i : set) {
			if (isPrime(i)) {
				answer++;
			}
		}
		
		return answer;
	}
	
	private static void permutation(String chose, String numbers, HashSet<Integer> set) {
		int n = numbers.length();
		
		if (!chose.equals("")) {
			set.add(Integer.valueOf(chose));
		}
		
		for (int i = 0; i < n; i++) {
			permutation(chose+numbers.charAt(i), numbers.substring(0, i)+numbers.substring(i+1, n), set);
		}
		
	}

	private static boolean isPrime(int i) {
		
		if (i < 2) {
			return false;
		} else {
			for (int j = 2; j*j <= i; j++) {
				if (i%j == 0) {
					return false;
				}
			}
		}
		
		return true;
	}

}
