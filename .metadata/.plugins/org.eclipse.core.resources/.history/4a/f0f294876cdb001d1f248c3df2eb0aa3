package _programers;


import java.util.HashSet;
import java.util.Set;

public class 소수만들기 {

	public static void main(String[] args) {
		
		int[] nums = {1,2,3,4};
		
		Set<Integer> sums = new HashSet<>();
		
		for (int i = 0; i < nums.length; i++) {
			int sum = nums[i];
			for (int j = 0; j < nums.length; j++) {
				if (j != i) {
					sum += nums[j];
					for (int j2 = 0; j2 < nums.length; j2++) {
						if(j2 != i && j2 != j) {
							sum += nums[j2];;
							sums.add(sum);
							sum -= nums[j2];
						}
					}
					sum -= nums[j];
				}
			}
		}
		
		int max = 0;
		for (int i = 0; i < nums.length; i++) {
			if (max <= nums[i]) {
				max = nums[i];
			}
		}
		
		//소수찾기
		boolean[] sosoo = new boolean[max*3+1];
		
		//일단 다 소수인 것처럼 초기화(2,3은 무조건 소수인 것을 이용할 것)
		for (int i = 2; i < sosoo.length; i++) {
			sosoo[i] = true;
		}
		
		//소수의 배수들 제거
		for (int i = 2; i*i <= max*3; i++) {
			if (sosoo[i]) {
				for (int j = i*i; j <= max*3; j+= i) {
					sosoo[j] = false;
				}
			}
		}
		
		for (boolean b : sosoo) {
			System.out.println(b);
		}
		int count = 0;
		
		for (int sum : sums) {
			boolean checkSosoo = true;
			for (int i = 2; i < sosoo.length; i++) {
				if (sosoo[i] && sum%i == 0) {
					checkSosoo = false;
				}
			}
			
			if (checkSosoo) {
				count++;
			}
		}
		
//		System.out.println(count);
	}

}
